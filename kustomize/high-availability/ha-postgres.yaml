apiVersion: v1
kind: ConfigMap
metadata:
  name: bootstrap-sql
  namespace: experio
data:
  init.sql: |
    ALTER DATABASE odoodb OWNER TO expuser;

---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: expcluster
  namespace: experio
spec:
  postgresVersion: 17
  users:
    - name: expuser
      databases:
        - odoodb
  databaseInitSQL:
    name: bootstrap-sql
    key: init.sql
  instances:
    # Primary instance set with read-write capabilities
    - name: pgha1
      replicas: 2  # Primary and one synchronous replica for HA
      dataVolumeClaimSpec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/cluster: expcluster
                    postgres-operator.crunchydata.com/instance-set: pgha1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: "250m"
          memory: 512Mi

    # Read-only instance set
    - name: pgha2
      replicas: 2
      dataVolumeClaimSpec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/cluster: expcluster
                    postgres-operator.crunchydata.com/instance-set: pgha2
      resources:
        limits:
          cpu: "500m"
          memory: 512Mi
        requests:
          cpu: "100m"
          memory: 256Mi

  # Global PostgreSQL configuration
  patroni:
    dynamicConfiguration:
      bootstrap:
        dcs:
          postgresql:
            parameters:
              shared_preload_libraries: 'pg_stat_statements'
              max_wal_senders: '10'
              max_replication_slots: '10'
              wal_level: logical
              synchronous_commit: 'on'
              synchronous_standby_names: '*'  # Enable synchronous replication
            pg_hba:
              - host all all 0.0.0.0/0 md5
              - host replication replicator 0.0.0.0/0 md5
          standby_cluster:
            create_replica_methods:
              - basebackup
            host: expcluster-pgha1
            nodes:
              - name: pgha2-1
                options:
                  - application_name: pgha2-1
                  - default_transaction_read_only: on
              - name: pgha2-2
                options:
                  - application_name: pgha2-2
                  - default_transaction_read_only: on
          slots:
            pgha2_1:
              type: physical
            pgha2_2:
              type: physical
  backups:
    pgbackrest:
      repos:
        - name: repo1
          volume:
            volumeClaimSpec:
              accessModes:
                - "ReadWriteOnce"
              resources:
                requests:
                  storage: 1Gi
  proxy:
    pgBouncer:
      replicas: 1
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/cluster: expcluster
                    postgres-operator.crunchydata.com/role: pgbouncer
      resources:
        requests:
          cpu: "50m"
          memory: "64Mi"
        limits:
          cpu: "200m"
          memory: "256Mi"
      config:
        global:
          pool_mode: transaction
          max_client_conn: "1000"
          default_pool_size: "20"
